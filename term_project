import numpy as np
import pandas as pd
import customtkinter as ctk
import tkinter as tk
from tkinter import ttk
from tkcalendar import Calendar, DateEntry
 
# Basic parameters and initializations
# Supported modes : Light, Dark, System
ctk.set_appearance_mode("System") 
 
# Supported themes : green, dark-blue, blue
ctk.set_default_color_theme("blue")    
 
appWidth, appHeight = 600, 300
 
# App Class
class App(ctk.CTk):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
 
        self.title("Data Loader")
        self.geometry(f"{appWidth}x{appHeight}")
 
        # Subject Label
        self.subjectLabel = ctk.CTkLabel(self,
                                            text="Subject")
        self.subjectLabel.grid(row=0, column=0,
                                  padx=5, pady=20,
                                  sticky="ew")
 
        # Subject combo box
        self.subjectOptionMenu = ctk.CTkOptionMenu(self,
                                        values=["310","311","312"])
        self.subjectOptionMenu.grid(row=0, column=1,
                                       padx=5, pady=20,
                                       columnspan=2, sticky="ew")
 
        #Date Range Label
        self.dateRangeLabel = ctk.CTkLabel(self,
                                           text="Date Range")
        self.dateRangeLabel.grid(row=1, column=0,
                                 padx=20, pady=20,
                                 sticky="EW")
 
        #Date Range Selectors        
        self.startDate = DateEntry(locale='en_US', date_pattern='m/dd/yyyy')
        self.startDate.set_date('1/17/2020')
        self.startDate.grid(row=1, column=1,
                            padx=5, pady=20,
                            sticky="EW")
        
        self.endDate = DateEntry(locale='en_US', date_pattern='m/dd/yyyy')
        self.endDate.set_date('1/22/2020')
        self.endDate.grid(row=1, column=2,
                          padx=5, pady=20,
                          sticky="EW")
 
        #Columns to Import
        self.columnsLabel = ctk.CTkLabel(self,
                                         text="Columns to Import:")
        self.columnsLabel.grid(row=2, column=0,
                               padx=20, pady=20)
        
        self.checkboxVar = tk.StringVar(value="Choice 1")
        
        self.column1 = ctk.CTkCheckBox(self,
                                       text="ACC Magnitude \nAVG",
                                       font=("Arial", 12),
                                       variable=self.checkboxVar,
                                       onvalue="choice1",
                                       offvalue="c1")
        self.column1.grid(row=2,column=1,
                          padx=5,pady=20,
                          sticky="EW")
 
        self.column2 = ctk.CTkCheckBox(self,
                                       text="EDA\nAVG",
                                       font=("Arial", 12),
                                       variable=self.checkboxVar,
                                       onvalue="choice2",
                                       offvalue="c2")                             
        self.column2.grid(row=2, column=2,
                          padx=5, pady=20,
                          sticky="EW")
 
        self.column3 = ctk.CTkCheckBox(self,
                                       text="Temp\nAVG",
                                       font=("Arial", 12),
                                       variable=self.checkboxVar,
                                       onvalue="choice3",
                                       offvalue="c3")                             
        self.column3.grid(row=2, column=3,
                          padx=5, pady=5,
                          sticky="EW")
         
        self.column4 = ctk.CTkCheckBox(self,
                                       text="Movement\nIntensity",
                                       font=("Arial", 12),
                                       variable=self.checkboxVar,
                                       onvalue="choice4",
                                       offvalue="c4")                             
        self.column4.grid(row=3, column=0,
                          padx=5, pady=5,
                          sticky="EW")
        
        self.column5 = ctk.CTkCheckBox(self,
                                       text="Steps\nCount",
                                       font=("Arial", 12),
                                       variable=self.checkboxVar,
                                       onvalue="choice5",
                                       offvalue="c5")                             
        self.column5.grid(row=3, column=1,
                          padx=5, pady=5,
                          sticky="EW")

        self.column6 = ctk.CTkCheckBox(self,
                                       text="Rest",
                                       font=("Arial", 12),
                                       variable=self.checkboxVar,
                                       onvalue="choice6",
                                       offvalue="c6")                             
        self.column6.grid(row=3, column=2,
                          padx=5, pady=5,
                          sticky="EW")
        
        self.column7 = ctk.CTkCheckBox(self,
                                       text="On\nWrist",
                                       font=("Arial", 12),
                                       variable=self.checkboxVar,
                                       onvalue="choice7",
                                       offvalue="c7")                             
        self.column7.grid(row=3, column=3,
                          padx=5, pady=5,
                          sticky="EW")


df = pd.read_csv("Dataset/20200118/310/summary.csv")
print(df.head(5))

if __name__ == "__main__":
    app = App()
    app.mainloop()
